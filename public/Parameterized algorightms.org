#+FILETAGS: :vimwiki:

* Parameterized algorightms
#= MSc - Parameterized algorithms =

[[J.Chen, I.Kanj, G.Xia]]
[[A. Dharwadker]]
** J.Chen, I.Kanj, G.Xia
This is an $O(1.2738^k + kn)$-time polynomial-space parameterized algorithm.

Given a graph $G$ and a parameter $k$, decied if $G$ has a vertex cover of at
most $k$ vertices.

I'll come back to this after reading the basics (kernelization).
** A. Dharwadker
*** Parameterized algorithms- A. Dharwadker

http://www.dharwadker.org/vertex_cover/

**** Notes

The pessimistic complexities are being computed for $k=1$.

***** Procedure 3.1
The procedure removes all removable vertices from a vertex cover, thus producing
a minimal vertex cover. It does so by performing a straightforward check through
all of the neighbors of each vertex belonging to the cover. 

***** Procedure 3.2

The clue of this procedure is the fact that to create a vertex cover, a choice
has to be made on every step - whether to take a vertex into the cover or all of
its neighbors. Since procedure 3.1 follows a hardcoded path, it is possible that
the resulting cover is not as small as it can be. This procedure tries to
minimize it further. Finding a vertex which has only a single neighbor outside
of the cover allows changing its structure a bit. After doing that, 
Procedure 3.2 performs Procedure 3.1 on the modified cover - expressing the 
possibility of achieving a cover of a smaller size than the one resulting from
Procedure 3.1.

***** Algorithm

****** Part I

This part strives to extract a minimal vertex cover (of size $k$ or less) from
given graph.

****** Part II

This part is meant to be used for very complicated graphs.
At the point of entering Part II, it is certain that Part I did not find
a minimal vertex cover of size $k$ or less.
This part of the algorithm takes each pair of extracted minimal vertex covers
and performs a union operation on them. Then, tries to extract a minimal vertex
cover from thusly achieved construct.

An example of a graph for which can be a graph from
_Klaus D. Witzel, Personal Communication, 2006._ :

    Take thirty disjoint cliques on fifteen vertices and connect random pairs of cliques by random edges. Shuffle the labels of the vertices well so that the original cliques are hidden.

An exemplary graph:

{{http://www.dharwadker.org/vertex_cover/fig20.gif}}
